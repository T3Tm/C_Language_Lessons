실수 계산이 왜 제대로 안 되는지.

실수가 저장될 떄 유한 소수이면 괜찮으나 무한소수이면 안 괜찮은 점.

또한 내가 저번에 얘기한 다른 값이 들어갈 것 같다는 것은 틀린 것이었다.

변수 와 상수 개념

변수는 프로그램에서 일시적(잠시)으로 데이터를 저장하는 공간이다.

변수가 필요한 이유는 데이터가 입력됐을 때 그것을 저장하지 않는다면 한 번 입력 받은 값을 다시 사용할 수 없다.

이와는 반대로 상수는 매번 새로운 값을 정하는 것이 아닌 한 번 정해지면 값이 변경될 수 없는 것을 말한다.

데이터를 저장하는 공간을 변수라고 하는데, 그럼 데이터를 저장하는 곳이 변수인데,

데이터도 저마다 다 다를 것이다. 내가 문자의 값을 넣고 싶을 수도 있고 숫자를 넣고 싶을 수도 있을 것이다.

그렇기 때문에 변수를 만들 때 어떤 데이터의 타입을 넣을지 미리 정해주셔야 됩니다!

데이터의 타입을 자료형이라고 부르는데요. 자료형은 크게 정수, 실수, 문자가 있다.

정수에는 short, int, long, long long
실수에는 float, double, long double
문자에는 char

이런 같은 정수형이라고 다양한 자료형이 있는 이유는 크기 때문이었다!

크기마다 범위가 나뉘게 된다. int ?,
작은 값을 저장할 것이면 굳이 큰 범위인 자료를 쓸 필요가 없다!

공간을 허비하는 것은 좋지 않으니, 공간을 널널하게 쓰는 것에 반대로 넘치게 쓰는 건 뭐였는지?
컴퓨터는 값을 저장할 때 비트단위인 2진수로 값을 저장하게 된다. 예를 들어) 11(2)이면 몇일까?
이와 똑같이 컴퓨터도 저런식으로 값을 저장하는데, 한 칸을 1비트로 생각하면 된다.

그런데 값을 저장할 떄 정확히 말하면 8비트일 때 맨 앞에 있는 비트는 부호비트라고 하고 0이면 양수, 1이면 음수라고 한다.

음수는 보수로 저장한다.

왜냐면 컴퓨터는 더하는 것밖에 할 수 없기 때문이다.

2를 저장할 때는 0010 이라고 하면
-2를 1010 이라고 했을 때 더하면

1100 이라고 돼서 값이 -4가 될 수 있다. 그렇기 때문에 -2를 저장할 때는 2의 보수로 저장한다.

그럼 어떻게 하냐면 2에서 모든 비트를 반전시킨다.
1101 그다음 1을 더한다.
1110 가 된다. 그럼 이것을 -2라고 한다.

0010과 1110을 더해 보면 
0000이 된다. 비트를 보면 0이다. 정확히 잘 계산이 되는 것을 볼 수 있다. 이로써 컴퓨터는 음수를 저장할 때는 보수로 저장하는 것을 알 수 있다.

그 다음 실수 같은 경우는 저장하는 방식이 2가지인데,
    1. 고정 소수점 방식
        소수점이 고정돼 있어서 정수부분에 일정 비트를 할당하고, 소수부분에도 일정 비트를 할당한다.
        예를 들어 0.5를 저장한다고 하면
        정수부분은0 이기에 0000 으로 저장될 것이고
        소수점을 찍은 뒤
        .5는 2^-1 이기에
        이런 식으로 저장될 것이다.
        0000.1000
        고정 소수점 방식을 이용하면 정수 부분은 16비트 이므로 32768까지밖에 저장할 수 없을 것이다.
        범위가 매우 적어진다. 그래서 고안한 방법이
    2. 부동 소수점 방식이다.
        부동 소수점 방식은 부호비트 1비트
        float 8비트, 23비트 , double은 11비트, 52비트
        이런 식으로 하면 더 넓은 범위로 표현할 수 있습니다.

마지막 자료형 문자형이 있다.
문자형도 컴퓨터가 저장할 때는 숫자로 저장한다.
그리고 공통적인 규격이 필요한데, 그것을 아스키 코드라고 한다.

자료형을 여러 개를 모아서 나열한 것을 배열이라고 하는데,
배열 같은 경우 같은 자료형의 값을 한꺼번에 관리할 때 편리하게 이용하기 위해서 쓴다.

예를 들어) 학생 점수를 관리한다고 했을 때 1번부터 30번 학생까지의 번호를 변수 30개를 만들어서 
관리하면 매우 비효율적일 것이다. 그럴 때 StudentScore 라는 변수로 배열을 만들면 좋을 것이다.
그래서 0번부터 29번까지 인덱스로 접근해서 관리하면 매우 편리할 것이다.

배열 초기화를 할 때 인덱스로 접근해서 초기화 하거나, 중괄호를 이용해서 초기화할 수 있다.
전체 요소보다 적게 갯수를 쓰면 나머지는 0으로 초기화가 된다.

배열 같은 경우 안에 있는 값을 복사 할려면
요소 하나하나에 접근해서 값을 옮겨 줘야한다.

char 배열 같은 경우는 문자열이라고 한다.
문자열은 +1 칸을 만들어 줘야한다.

char 배열이름[칸+1] 초기화 하는 방법으로는 {'',''};
이런식으로 배열처럼 초기화 하거나 "" 큰 따옴표로 초기화 하면 된다.

문자열 또한 배열이므로 복사할 때는 인덱스로 각각의 요소로 복사해서 옮겨주어야 한다.

엔터키도 하나의 입력이다.! 
아스키코드에 enter key도 하나의 값이다.

그래서 엔터키가 들어가게 된다.
이것을 입력 버퍼라고 하는데 입력 버퍼를 비우는 방식으로는 이렇게 %c 앞에 한 칸을 띄어주게 되면
엔터키가 저 공백으로 인해 비워지게 되고 입력을 기다리게 된다.


배열의 크기를 알 수 있는 방법이 뭐가 있을까?

문자열의 길이를 알 수 있는 방법이 뭐가 있을까?


새로운 개념

연산자
총 8개
1.산술 연산자 : + , - , *, / , %
2.부호 연산자 : + , - 정수, 실수 앞에 부호를 붙일 때
3.증감 연산자 : ++ , --
4.대입 연산자 : =
5.복합 대입 연산자 : 
6.관계 연산자
7.논리 연산자
8.비트 연산자

피연산자에 따라서 연산자가 여러 개로 나뉜다.

피연산자가 1개 => 단항 연산자
          2개 => 이항 연산자
연산자가   3개 => 삼항 연산자 (조건 연산자라고도 불림)

1.2 같은 경우는 단순하다.

증감 연산자 같은 경우 ++ ,-- 가 있는데
후위증감, 전위증감 이런 식으로 나뉨
전위와 후위의 차이는 값이 먼저 더해지고 다른 곳에 들어가냐?의 차이이다.

++x 이런 식으로 쓰면 단항 연산자가 된다.
++x ==> x= x+1 이라는 것이다.
즉 x를 하나 증가 시키는 것인데.
x++ 이나 ++x나 둘 다 동일하게 x가 하나 증가 된다.

그런데 ++x 는 값이 먼저 증가 되고 다른 곳에 사용되고 x++은 x의 값이 다른 곳에 먼저 사용되고 나중에 증가된다.
즉, y=x++ , y=++x

단항 연산자와 증감 연산자를 이용하여 출력 창과 같이 보여지게 프로그램을 작성하시오!
x = 3 y = 9 z = 4 
x = 4 y = 10 z = 3
x = 4 y = 9 z = 5 
x = 5 y = 8 z = 4 

금액을 적었을 때 화폐와 동전수를 계산하는 프로그램을 작성하시오!
(단. 배열을 이용하시오!)
배열의 0번은 100원 동전, 1번은 500원 동전, 2번은 1000원 , 3번은 5000원이다.

입력 예)
5800원

arr[3]=1;
arr[2]=0;
arr[1]=1;
arr[0]=3;


거스름돈 계산하는 프로그램을 작성하시오!
(단. 배열을 이용하시오!)
배열의 0번은 10원 동전, 1번은 50원 동전..5번은 5000원이다.


복합 대입 연산자는 대입연산자와 산술 연산자를 합친 것이라고 보면 된다.

관계 연산자   == , != , >, < , >=, <=
결과가 참이면 1, 거짓이면 0이 출력된다. (컴퓨터는 0이외의 숫자는 참이라고 생각한다.)

수학에서 연달아서 3개를 비교할 시에는 앞에서부터 차례대로 계산할 결과가 나오게 된다.

2 < 8 < 5 라고 비교하면 
2 < 8 을 계산 한 결과인
1 < 5 
 1 로 참이 나오게 된다.
그러면 수학처럼 2 < 8 < 5 처럼 적고 싶을 때는 논리 연산자를 사용해주면 된다!

논리 연산자는 참과 거짓을 따지는 연산자로 &&(and), ||(or), !x(not) 이 있다.

그래서 아까 수학의 수식처럼 적으려면 2가 8보다 크고 동시에 8이 5보다 작냐라고 물어봐야 하므로
2 < 8 && 8 < 5  이런식으로 적어 주어야 한다!

단축 계산 && 같은 경우 첫 번째 결과가 거짓이면 그 뒤에 있는 연산은 보지도 않는다.
이와는 같은 예시로 || 같은 경우도 첫 번째 결과가 참이면 그 뒤에 연산은 보지도 않는다.


입력 받은 년도가 윤년인지 판단하는 프로그램을 작성해보자!
입력 받은 년도가 윤년이면 1이라고 출력한다.
윤년은  4로 나누어 떨어진다.
하지만 100으로 나누어 떨어지면 안된다.
400으로 나누어 떨어지는 연도는 윤년이다.

관계 속에 조건 연산자로 삼항 연산자가 있다.
(수식) ? 참일 경우 : 거짓일 경우; 이런식으로 기술


비트 연산 
&  and
|  or
^ 비트 xor 비트의 값이 같으면 0 아니면 1
<< 비트 왼쪽으로 쉬프트
>> 오른쪽 쉬프트
~ not

형변환
1. 자동 형변환
    -대입
    -정수 연산 => char, shjort +,- 하면 int로 변환 된다.
    -수식 연산 => 혼합되면 더 큰 자료형으로 통일.
올림 변환 => 
    10 => 10.0
내림 변환 =>
    3.14
    3이라고
2. 명시적 형변환:
(int)값


화씨 온도 -> 섭씨로 바꾸기
화씨온도를 입력 받아서 섭씨온도가 되게끔 해주자.
섭씨 온도 = 5/9(화씨온도 -32)